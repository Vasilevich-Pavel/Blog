@model Blog.Models.RegisterModel

@{
    ViewBag.Title = "Регистрация";
}

<h2>Регистрация</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Регистрация нового пользователя</h4>
        <hr />
        @Html.ValidationSummary("Допустимые символы для логина и пароля: буквы лaтинского алфавита, цифры и знак подчеркивания.Допустимая длина: 5 - 15 символов", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Login, "Логин", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control account", @autocomplete = "off", @required = "on", @placeholder = "Введите логин", @pattern = "^[A-Za-z\\d_]{5,15}$" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control account", @autocomplete = "off", @required = "on", @placeholder = "Введите пароль", @pattern = "^[A-Za-z\\d_]{5,15}$" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control account", @type="email", @autocomplete = "off", @required = "on", @placeholder = "Введите Email" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Зарегистрироваться" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Admin")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
